const { response } = require('../../helpers/response');
const logger = require('../../helpers/loggers');
const UserModel = require('../../models/User'); 
const { check } = require('express-validator');


const getDatabaseFields = async () => {
    try {
        return Object.keys(UserModel.rawAttributes).filter(field => {
            const attribute = UserModel.rawAttributes[field];
            return !(attribute.primaryKey || attribute.autoIncrement || attribute._autoGenerated);
        });
    } catch (error) {
        logger.error(`Error fetching database fields: ${error.message}`);
        return [];
    }
};

const checkExtraFields = async (req, res, next) => {
    try {
        const dbFields = await getDatabaseFields();
        const inputFields = Object.keys(req.body);

        const extraFields = inputFields.filter(field => !dbFields.includes(field));
        if (extraFields.length > 0) {
            logger.error(`Extra fields detected: ${extraFields.join(', ')}`);
            return response({
                req,
                res,
                code: 400,
                message: `Extra fields detected: ${extraFields.join(', ')}`,
            });
        }

        const missingFields = dbFields.filter(field => !inputFields.includes(field));
        if (missingFields.length > 0) {
            logger.error(`Missing fields detected: ${missingFields.join(', ')}`);
            return response({
                req,
                res,
                code: 400,
                message: `Missing fields: ${missingFields.join(', ')}`,
            });
        }

        if (JSON.stringify(inputFields) !== JSON.stringify(dbFields)) {
            logger.warn(`Fields order mismatch. Expected: ${dbFields.join(', ')}, Provided: ${inputFields.join(', ')}`);
            return response({
                req,
                res,
                code: 400,
                message: `Fields order mismatch. Expected order: ${dbFields.join(', ')}`,
            });
        }

        next(); 
    } catch (error) {
        logger.error(`Validation error: ${error.message}`);
        return response({
            req,
            res,
            code: 500,
            message: `An error occurred during validation: ${error.message}`,
        });
    }
};

module.exports = checkExtraFields;
